/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.16
 * Generated at: 2022-02-14 09:26:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import board.BoardBean;
import board.BoardBean;

public final class read_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("board.BoardBean");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--  \r\n");
      out.write("	기본폼 만들기\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>JSP Board</title>\r\n");
      out.write("<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      board.BoardMgr bMgr = null;
      bMgr = (board.BoardMgr) _jspx_page_context.getAttribute("bMgr", jakarta.servlet.jsp.PageContext.PAGE_SCOPE);
      if (bMgr == null){
        bMgr = new board.BoardMgr();
        _jspx_page_context.setAttribute("bMgr", bMgr, jakarta.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	function list(){\r\n");
      out.write("	    document.listFrm.submit();\r\n");
      out.write("	 } \r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<br/><br/>\r\n");
      out.write("\r\n");
      out.write("<table align=\"center\" width=\"1000\" cellspacing=\"3\">\r\n");
      out.write(" <tr>\r\n");
      out.write("  <td bgcolor=\"#9CA2EE\" height=\"25\" align=\"center\">글읽기</td>\r\n");
      out.write(" </tr>\r\n");
      out.write(" \r\n");
      out.write(" <tr>\r\n");
      out.write("  	<td colspan=\"2\">\r\n");
      out.write("   	<table cellpadding=\"3\" cellspacing=\"0\" width=\"100%\"> \r\n");
      out.write("    	<tr> \r\n");
      out.write("  			<td align=\"center\" bgcolor=\"#DDDDDD\" width=\"10%\"> 이 름 </td>\r\n");
      out.write("  			<td  > ");
      out.print(name );
      out.write("</td>\r\n");
      out.write("  			<td align=\"center\" bgcolor=\"#DDDDDD\" width=\"10%\"> 등록날짜 </td>\r\n");
      out.write("  			<td  >");
      out.print(regdate );
      out.write("</td>\r\n");
      out.write(" 		</tr>\r\n");
      out.write(" 		<tr>\r\n");
      out.write("    		<td align=\"center\" bgcolor=\"#DDDDDD\"> 제 목</td>\r\n");
      out.write("    		<td  colspan=\"3\">");
      out.print(subject );
      out.write("</td>\r\n");
      out.write("  		</tr> 			\r\n");
      out.write("  		<tr> \r\n");
      out.write("    		<td colspan=\"4\"><br/><pre> ");
      out.print(content );
      out.write(" </pre><br/></td>\r\n");
      out.write("   		</tr>\r\n");
      out.write("   		\r\n");
      out.write("   		<tr>\r\n");
      out.write("    		<td colspan=\"4\" align=\"right\">\r\n");
      out.write("     		");
      out.print(ip );
      out.write(" 로 부터 글을 남기셨습니다. /  조회수  ");
      out.print(count );
      out.write("\r\n");
      out.write("    	</td>\r\n");
      out.write("  	 	</tr> 	 	\r\n");
      out.write("   </table>\r\n");
      out.write(" </td>\r\n");
      out.write(" \r\n");
      out.write(" </tr>\r\n");
      out.write(" \r\n");
      out.write(" <tr>\r\n");
      out.write("  <td align=\"center\" colspan=\"2\"> \r\n");
      out.write(" <hr/>\r\n");
      out.write("\r\n");
      out.write(" [ <a href=\"javascript:list()\" >리스트</a> | \r\n");
      out.write(" <a href=\"update.jsp?nowPage=");
      out.print(nowPage);
      out.write("&num=");
      out.print(num);
      out.write("\" >수 정</a> |\r\n");
      out.write(" <a href=\"delete.jsp?nowPage=");
      out.print(nowPage);
      out.write("&num=");
      out.print(num);
      out.write("\">삭 제</a> ]<br/> \r\n");
      out.write("  </td>\r\n");
      out.write(" </tr>\r\n");
      out.write(" \r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<form name=\"listFrm\" method=\"post\" action=\"list.jsp\">\r\n");
      out.write("	<input type=\"hidden\" name=\"nowPage\" value=\"");
      out.print(nowPage);
      out.write("\">\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
